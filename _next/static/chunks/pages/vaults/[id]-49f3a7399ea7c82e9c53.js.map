{"version":3,"sources":["webpack://_N_E/./src/components/approve.js","webpack://_N_E/./src/components/connect.js","webpack://_N_E/./src/components/deposit.js","webpack://_N_E/./src/data/constants.js","webpack://_N_E/./src/components/withdraw.js","webpack://_N_E/./src/components/vaultActions.js","webpack://_N_E/./src/components/claim.js","webpack://_N_E/./src/components/vaultDetails.js","webpack://_N_E/./src/components/vaultData.js","webpack://_N_E/./src/components/vault.js","webpack://_N_E/./pages/vaults/[id].js","webpack://_N_E/./src/components/back.js","webpack://_N_E/./src/components/footer.js","webpack://_N_E/./src/components/wallet.js","webpack://_N_E/./src/components/header.js","webpack://_N_E/./src/components/toast.js","webpack://_N_E/./src/components/toasts.js","webpack://_N_E/./src/helpers/format.js","webpack://_N_E/./src/helpers/transactions.js","webpack://_N_E/./src/helpers/vaults.js","webpack://_N_E/./src/helpers/wei.js","webpack://_N_E/?0330","webpack://_N_E/./node_modules/next/router.js"],"names":["props","dispatch","useDispatch","useState","deposit","setDeposit","useAll","setUseAll","buttonLabel","setButtonLabel","status","setStatus","useEffect","test","amount","toWei","BigNumber","decimals","balance","comparedTo","length","onChange","e","value","target","setMax","places","decimalPlaces","fromWei","toFixed","balanceId","token","className","type","id","onKeyDown","preventDefault","disabled","isZero","onClick","htmlFor","formatAmount","symbol","includes","address","vaultAddress","vault","tokenContract","allowance","methods","approve","send","from","on","hash","transactionSent","then","toastDestroyed","newVaultFetch","fetchVaultsDataAsync","toastAdded","title","body","icon","style","autohide","catch","error","message","useSelector","selectStatus","connectAsync","chainId","selectChainId","referral","setReferral","depositLabel","setDepositLabel","localStorage","getItem","roundingMode","maxMaticDepositAmount","reserve","minus","call","vaultContract","depositMATIC","depositAll","pid","toWeiFormatted","withdraw","setWithdraw","withdrawLabel","setWithdrawLabel","deposited","handleWithdrawClick","shares","div","pricePerFullShare","vaultDecimals","handleWithdrawAllClick","withdrawAll","depositedId","apy","actions","selectAddress","web3","selectWeb3","action","setAction","abi","eth","Contract","tokenData","supportedChains","require","default","getTokenData","vaultData","pool","getVaultData","renderBalanceAction","claimLabel","setClaimLabel","pending","pendingTokens","getVaultContract","harvest","isGreaterThan","earn","tvl","usdPrice","staked","times","depositedUsd","toUsd","tvlUsd","src","alt","height","width","uses","toPercentage","render","vaults","selectVaults","find","key","constantVaultFetch","path","useRouter","query","role","href","rel","addressLabel","substr","walletIcon","supported","isNaN","border","disconnectAsync","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","ref","React","BSToast","element","current","show","addEventListener","aria-live","aria-atomic","data-bs-dismiss","renderToasts","toasts","map","toast","i","selectToasts","prefix","order","Math","floor","log10","abs","units","number","max","toNumber","amountInWei","fixed","TransactionLink","explorerUrl","getBlockExplorerUrl","text","fetchData","skip","defaultChain","resetVaults","interval","setInterval","FETCH_INTERVAL","clearInterval","pow","window","__NEXT_P","push","module","exports"],"mappings":"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","file":"static/chunks/pages/vaults/[id]-49f3a7399ea7c82e9c53.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\n\nconst Approve = props => {\n  const dispatch                      = useDispatch()\n  const [deposit, setDeposit]         = useState('')\n  const [useAll, setUseAll]           = useState(false)\n  const [buttonLabel, setButtonLabel] = useState('Approve')\n  const [status, setStatus]           = useState('blank')\n\n  useEffect(() => {\n    if (status !== 'approve') {\n      if (/^\\d*\\.?\\d*$/.test(deposit) && +deposit) {\n        const amount = toWei(new BigNumber(deposit), props.decimals)\n\n        setStatus(props.balance.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else if (deposit.length === 0) {\n        setStatus('blank')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [deposit, status, props.balance, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    setUseAll(false)\n    setDeposit(value)\n  }\n\n  const handleClick = () => {\n    const address       = props.address\n    const vaultAddress  = props.vault.address\n    const tokenContract = props.tokenContract()\n    const allowance     = toWei(new BigNumber('1e58'), props.decimals).toFixed()\n\n    setButtonLabel('Approve...')\n    setStatus('approve')\n\n    tokenContract.methods.approve(vaultAddress, allowance).send({\n      from: address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setStatus('blank')\n      setButtonLabel('Approve')\n      dispatch(toastDestroyed('Approve rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Approval done',\n          body:     'Your approval was successful, you can now deposit',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setStatus('blank')\n      setButtonLabel('Approve')\n      dispatch(\n        toastAdded({\n          title:    'Approve rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places = decimalPlaces(props.decimals)\n\n    setUseAll(true)\n    setDeposit(fromWei(props.balance, props.decimals).toFixed(places))\n  }\n\n  const balanceId = () => `balance-${props.token}`\n\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-1\">\n        <input type=\"number\"\n               className=\"form-control\"\n               id={balanceId()}\n               onKeyDown={e => onChange(e) && e.preventDefault()}\n               onChange={onChange}\n               value={deposit} />\n        <button type=\"button\"\n                className=\"btn btn-link bg-input\"\n                disabled={props.balance?.isZero() || useAll}\n                onClick={setMax}>\n          Max\n        </button>\n      </div>\n\n      <div className=\"text-end\">\n        <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n               htmlFor={balanceId()}\n               onClick={setMax}>\n          Wallet balance: {formatAmount(fromWei(props.balance, props.decimals), '', 8)} {props.symbol}\n        </label>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <div className=\"row justify-content-center mt-4 mb-3\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                    disabled={['invalid', 'approve'].includes(status)}\n                    onClick={handleClick}>\n              {buttonLabel}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nApprove.propTypes = {\n  address:       PropTypes.string.isRequired,\n  balance:       PropTypes.object.isRequired,\n  decimals:      PropTypes.object.isRequired,\n  symbol:        PropTypes.string.isRequired,\n  token:         PropTypes.string.isRequired,\n  tokenContract: PropTypes.func.isRequired,\n  vault:         PropTypes.object.isRequired,\n  web3:          PropTypes.object.isRequired\n}\n\nexport default Approve\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { connectAsync, selectStatus } from '../features/walletSlice'\n\nconst Connect = () => {\n  const status   = useSelector(selectStatus)\n  const dispatch = useDispatch()\n\n  const buttonLabel = () => {\n    if (status === 'loading') {\n      return 'Connecting...'\n    } else if (status === 'success') {\n      return 'Connected'\n    } else {\n      return 'Connect'\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row justify-content-center my-4\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-primary fw-bold\"\n                    disabled={['loading', 'success'].includes(status)}\n                    onClick={() => { dispatch(connectAsync()) }}>\n              {buttonLabel()}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n    </React.Fragment>\n  )\n}\n\nexport default Connect\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount, toWeiFormatted } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport { selectChainId } from '../features/walletSlice'\nimport { ZERO_ADDRESS } from '../data/constants'\n\nconst Deposit = props => {\n  const chainId                         = useSelector(selectChainId)\n  const dispatch                        = useDispatch()\n  const [referral, setReferral]         = useState('')\n  const [deposit, setDeposit]           = useState('')\n  const [useAll, setUseAll]             = useState(false)\n  const [depositLabel, setDepositLabel] = useState('Deposit')\n  const [status, setStatus]             = useState('blank')\n\n  useEffect(() => {\n    setReferral(localStorage.getItem('referral') || ZERO_ADDRESS)\n  }, [])\n\n  useEffect(() => {\n    if (status !== 'deposit') {\n      if (/^\\d*\\.?\\d*$/.test(deposit) && +deposit) {\n        const amount = toWei(new BigNumber(deposit), props.decimals)\n\n        setStatus(props.balance.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [deposit, status, props.balance, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    if (status === 'deposit') {\n      setStatus('invalid')\n    }\n\n    setUseAll(false)\n    setDeposit(value)\n  }\n\n  const handleDepositClick = () => {\n    const vaultContract = props.vaultContract()\n    let   amount        = toWeiFormatted(new BigNumber(deposit), props.decimals)\n\n    setDepositLabel('Deposit...')\n    setStatus('deposit')\n\n    let call\n\n    // Native Matic vault\n    if (vaultContract.methods.depositMATIC) {\n      call = vaultContract.methods.depositMATIC().send({\n        from:  props.address,\n        value: amount\n      })\n    } else if (chainId === 80001) {\n      call = vaultContract.methods.deposit(props.pid, amount, referral).send({\n        from: props.address\n      })\n    } else {\n      call = vaultContract.methods.deposit(amount).send({ from: props.address })\n    }\n\n    call.on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setDeposit('')\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(toastDestroyed('Deposit rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Deposit approved',\n          body:     'Your deposit was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(\n        toastAdded({\n          title:    'Deposit rejected',\n          body:     'Your deposit has been rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const handleDepositAllClick = () => {\n    const vaultContract = props.vaultContract()\n\n    setMax()\n    setDepositLabel('Deposit...')\n    setStatus('deposit')\n\n    let call\n\n    if (vaultContract.methods.depositMATIC) {\n      let amount = maxMaticDepositAmount(props.balance)\n\n      if (!amount)\n        return\n\n      call = vaultContract.methods.depositMATIC().send({\n        from: props.address, value: amount.toFixed()\n      })\n    } else if (chainId === 80001) {\n      call = vaultContract.methods.depositAll(props.pid).send({\n        from: props.address\n      })\n    } else {\n      call = vaultContract.methods.depositAll().send({ from: props.address })\n    }\n\n    call.on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setDeposit('')\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(toastDestroyed('Deposit all rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Deposit all approved',\n          body:     'Your deposit was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setDepositLabel('Deposit')\n      setStatus('blank')\n      dispatch(\n        toastAdded({\n          title:    'Deposit all rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places       = decimalPlaces(props.decimals)\n    const roundingMode = BigNumber.ROUND_DOWN\n\n    setUseAll(true)\n    setDeposit(\n      fromWei(props.balance, props.decimals).toFixed(places, roundingMode)\n    )\n  }\n\n  const balanceId = () => `balance-${props.token}`\n\n  const maxMaticDepositAmount = amount => {\n    const reserve = new BigNumber(0.025e18)\n\n    if (amount.comparedTo(reserve) > 0)\n      return amount.minus(reserve)\n    else {\n      setDepositLabel('Deposit')\n      setStatus('blank')\n      dispatch(\n        toastAdded({\n          title:    'Deposit all rejected',\n          body:     'Deposit should be greater than 0.025 MATIC',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-1\">\n        <input type=\"number\"\n               className=\"form-control\"\n               id={balanceId()}\n               onKeyDown={e => onChange(e) && e.preventDefault()}\n               onChange={onChange}\n               value={deposit} />\n        <button type=\"button\"\n                className=\"btn btn-link bg-input\"\n                disabled={props.balance?.isZero() || useAll}\n                onClick={setMax}>\n          Max\n        </button>\n      </div>\n\n      <div className=\"text-end\">\n        <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n               htmlFor={balanceId()}\n               onClick={setMax}>\n          Wallet balance: {formatAmount(fromWei(props.balance, props.decimals), '', 8)} {props.symbol}\n        </label>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <div className=\"row justify-content-center mt-4 mb-3\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                    disabled={status !== 'valid'}\n                    onClick={useAll ? handleDepositAllClick : handleDepositClick}>\n              {depositLabel}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nDeposit.propTypes = {\n  address:       PropTypes.string.isRequired,\n  balance:       PropTypes.object.isRequired,\n  decimals:      PropTypes.object.isRequired,\n  pid:           PropTypes.string.isRequired,\n  symbol:        PropTypes.string.isRequired,\n  token:         PropTypes.string.isRequired,\n  vaultContract: PropTypes.func.isRequired\n}\n\nexport default Deposit\n","export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount, toWeiFormatted } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport { selectChainId } from '../features/walletSlice'\n\nconst Withdraw = props => {\n  const chainId                                 = useSelector(selectChainId)\n  const dispatch                                = useDispatch()\n  const [withdraw, setWithdraw]                 = useState('')\n  const [useAll, setUseAll]                     = useState(false)\n  const [withdrawLabel, setWithdrawLabel]       = useState('Withdraw')\n  const [status, setStatus]                     = useState('blank')\n\n  useEffect(() => {\n    if (status !== 'withdraw') {\n      if (/^\\d*\\.?\\d*$/.test(withdraw) && +withdraw) {\n        const amount = toWei(new BigNumber(withdraw), props.decimals)\n\n        setStatus(props.deposited.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [withdraw, status, props.deposited, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    if (status === 'withdraw') {\n      setStatus('invalid')\n    }\n\n    setUseAll(false)\n    setWithdraw(value)\n  }\n\n  const handleWithdrawClick = () => {\n    const vaultContract = props.vaultContract()\n    const withdrawInWei = toWei(new BigNumber(withdraw), props.decimals)\n    const shares        = withdrawInWei.div(props.pricePerFullShare)\n    const amount        = toWeiFormatted(shares, props.vaultDecimals)\n\n    setWithdrawLabel('Withdraw...')\n    setStatus('withdraw')\n\n    let call\n\n    if (chainId === 80001) {\n      call = vaultContract.methods.withdraw(props.pid, amount)\n    } else {\n      call = vaultContract.methods.withdraw(amount)\n    }\n\n    call.send({\n      from: props.address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setWithdraw('')\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(toastDestroyed('Withdraw rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Withdraw approved',\n          body:     'Your withdraw was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(\n        toastAdded({\n          title:    'Withdraw rejected',\n          body:     'Your withdraw was rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const handleWithdrawAllClick = () => {\n    const vaultContract = props.vaultContract()\n\n    setMax()\n    setWithdrawLabel('Withdraw...')\n    setStatus('withdraw')\n\n    let call\n\n    if (chainId === 80001) {\n      call = vaultContract.methods.withdrawAll(props.pid)\n    } else {\n      call = vaultContract.methods.withdrawAll()\n    }\n\n    call.send({\n      from: props.address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setWithdraw('')\n      setStatus('withdraw')\n      setWithdrawLabel('Withdraw')\n      dispatch(toastDestroyed('Withdraw all rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Withdraw all approved',\n          body:     'Your withdraw was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(\n        toastAdded({\n          title:    'Withdraw all rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places       = decimalPlaces(props.decimals)\n    const roundingMode = BigNumber.ROUND_DOWN\n\n    setUseAll(true)\n    setWithdraw(\n      fromWei(props.deposited, props.decimals).toFixed(places, roundingMode)\n    )\n  }\n\n  const depositedId = () => `deposited-${props.token}`\n\n  const actions = () => {\n    if (+props.apy > 0) {\n      return (\n        <React.Fragment>\n          <div className=\"input-group mb-1\">\n            <input type=\"number\"\n                   className=\"form-control\"\n                   id={depositedId()}\n                   onKeyDown={e => onChange(e) && e.preventDefault()}\n                   onChange={onChange}\n                   value={withdraw} />\n            <button type=\"button\"\n                    className=\"btn btn-link bg-input\"\n                    disabled={props.deposited?.isZero() || useAll}\n                    onClick={setMax}>\n              Max\n            </button>\n          </div>\n\n          <div className=\"text-end\">\n            <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n                   htmlFor={depositedId()}\n                   onClick={setMax}>\n              Deposited: {formatAmount(fromWei(props.deposited, props.decimals), '', 8)} {props.symbol}\n            </label>\n          </div>\n\n          <hr className=\"border border-primary border-1 opacity-100\" />\n\n          <div className=\"row justify-content-center mt-4 mb-3\">\n            <div className=\"col-lg-6\">\n              <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n                <button type=\"button\"\n                        className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                        disabled={status !== 'valid'}\n                        onClick={useAll ? handleWithdrawAllClick : handleWithdrawClick}>\n                  {withdrawLabel}\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"alert alert-info py-2 my-4\">\n            <p className=\"text-center small mb-0\">\n              Withdrawals are temporarily disabled\n            </p>\n          </div>\n\n          <hr className=\"border border-primary border-1 opacity-100\" />\n        </React.Fragment>\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {actions()}\n    </React.Fragment>\n  )\n}\n\nWithdraw.propTypes = {\n  address:           PropTypes.string.isRequired,\n  apy:               PropTypes.number.isRequired,\n  decimals:          PropTypes.object.isRequired,\n  deposited:         PropTypes.object.isRequired,\n  pid:               PropTypes.string.isRequired,\n  pricePerFullShare: PropTypes.object.isRequired,\n  symbol:            PropTypes.string.isRequired,\n  token:             PropTypes.string.isRequired,\n  vaultContract:     PropTypes.func.isRequired,\n  vaultDecimals:     PropTypes.object.isRequired\n}\n\nexport default Withdraw\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport Approve from './approve'\nimport Connect from './connect'\nimport Deposit from './deposit'\nimport Withdraw from './withdraw'\nimport { selectStatus } from '../features/vaultsSlice'\nimport {\n  selectAddress,\n  selectChainId,\n  selectWeb3,\n  supportedChains\n} from '../features/walletSlice'\n\nconst VaultActions = props => {\n  const status              = useSelector(selectStatus)\n  const address             = useSelector(selectAddress)\n  const chainId             = useSelector(selectChainId)\n  const web3                = useSelector(selectWeb3)\n  const [action, setAction] = useState('deposit')\n\n  const getTokenData = () => {\n    if (supportedChains.includes(chainId)) {\n      return require(`../abis/tokens/${chainId}/${props.token}`).default\n    }\n  }\n\n  const getVaultData = () => {\n    if (supportedChains.includes(chainId)) {\n      if (chainId === 80001) {\n        return require(`../abis/main/${chainId}/archimedes`).default\n      } else {\n        return require(`../abis/vaults/${chainId}/${props.pool}-${props.token}`).default\n      }\n    }\n  }\n\n  const tokenContract = (token) => {\n    return () => {\n      if (token.abi) {\n        return new web3.eth.Contract(token.abi, token.address)\n      }\n    }\n  }\n\n  const vaultContract = (vault) => {\n    return () => {\n      return new web3.eth.Contract(vault.abi, vault.address)\n    }\n  }\n\n  const canDeposit = () => {\n    return props.allowance.comparedTo(props.balance) > 0\n  }\n\n  const tokenData = getTokenData()\n  const vaultData = getVaultData()\n\n  const renderBalanceAction = () => {\n    const { balance, decimals, pid, symbol, token } = props\n\n    if (canDeposit()) {\n      return <Deposit address={address}\n                      balance={balance}\n                      decimals={decimals}\n                      pid={pid}\n                      symbol={symbol}\n                      token={token}\n                      vaultContract={vaultContract(vaultData)} />\n    } else {\n      return <Approve address={address}\n                      balance={balance}\n                      decimals={decimals}\n                      symbol={symbol}\n                      token={token}\n                      tokenContract={tokenContract(tokenData)}\n                      vault={vaultData}\n                      web3={web3} />\n    }\n  }\n\n  const renderAction = () => {\n    if (action === 'deposit') {\n      return renderBalanceAction()\n    } else {\n      return <Withdraw address={address}\n                       apy={props.apy}\n                       decimals={props.decimals}\n                       deposited={props.deposited}\n                       pid={props.pid}\n                       pricePerFullShare={props.pricePerFullShare}\n                       symbol={props.symbol}\n                       token={props.token}\n                       vaultContract={vaultContract(vaultData)}\n                       vaultDecimals={props.vaultDecimals} />\n    }\n  }\n\n  const renderActions = () => {\n    if (['loaded', 'loading', 'succeded'].includes(status) && props.deposited) {\n      return (\n        <React.Fragment>\n          <ul className=\"nav nav-pills mb-3\">\n            <li className=\"nav-item\">\n              <button type=\"button\"\n                      className={`nav-link ${action === 'deposit' ? 'active' : ''}`}\n                      onClick={() => setAction('deposit')}>\n                Deposit\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\"\n                      className={`nav-link ${action === 'withdraw' ? 'active' : ''}`}\n                      onClick={() => setAction('withdraw')}>\n                Withdraw\n              </button>\n            </li>\n          </ul>\n\n          {renderAction()}\n        </React.Fragment>\n      )\n    } else {\n      return <Connect />\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {renderActions()}\n    </React.Fragment>\n  )\n}\n\nVaultActions.propTypes = {\n  allowance:         PropTypes.object,\n  apy:               PropTypes.number,\n  balance:           PropTypes.object,\n  decimals:          PropTypes.object,\n  deposited:         PropTypes.object,\n  pid:               PropTypes.string.isRequired,\n  pool:              PropTypes.string.isRequired,\n  pricePerFullShare: PropTypes.object,\n  symbol:            PropTypes.string.isRequired,\n  token:             PropTypes.string.isRequired,\n  vaultDecimals:     PropTypes.object\n}\n\nexport default VaultActions\n","import PropTypes from 'prop-types'\nimport BigNumber from 'bignumber.js'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { fromWei } from '../helpers/wei'\nimport { formatAmount } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport {\n  selectAddress,\n  selectChainId,\n  selectWeb3\n} from '../features/walletSlice'\n\nconst Claim = props => {\n  const address                     = useSelector(selectAddress)\n  const chainId                     = useSelector(selectChainId)\n  const web3                        = useSelector(selectWeb3)\n  const dispatch                    = useDispatch()\n  const [claimLabel, setClaimLabel] = useState('Claim')\n  const [status, setStatus]         = useState('ready')\n\n  const pendingTokens = vault => {\n    const decimals               = new BigNumber(18) // just to save a call\n    const { pendingTokens, pid } = vault\n\n    return pid && pendingTokens && fromWei(pendingTokens, decimals)\n  }\n\n  const getVaultContract = () => {\n    const vault = require(`../abis/main/${chainId}/archimedes`).default\n\n    return new web3.eth.Contract(vault.abi, vault.address)\n  }\n\n  const handleClick = () => {\n    const vaultContract = getVaultContract()\n\n    setClaimLabel('Claim...')\n    setStatus('claim')\n\n    vaultContract.methods.harvest(props.vault.pid).send({\n      from: address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setStatus('ready')\n      setClaimLabel('Claim')\n      dispatch(toastDestroyed('Claim rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Claim approved',\n          body:     'Your claim was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('ready')\n      setClaimLabel('Claim')\n      dispatch(\n        toastAdded({\n          title:    'Claim rejected',\n          body:     'Your claim was rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const pending = pendingTokens(props.vault)\n\n  const enabled = () => {\n    return status === 'ready' && chainId === 80001 && pending?.isGreaterThan(0)\n  }\n\n  if (props.vault.pid) {\n    return (\n      <div className=\"row my-2\">\n        <div className=\"col-6 text-start\">\n          <p className=\"text-muted fw-bold mb-0\">\n            2pi earned\n          </p>\n        </div>\n        <div className=\"col-6 text-end\">\n          <p className=\"fw-bold mb-1\">\n            {pending ? formatAmount(pending, '', 8) : '-'}\n          </p>\n          <p className=\"mb-0\">\n            <button type=\"button\"\n                    className=\"btn btn-sm btn-dark\"\n                    onClick={handleClick}\n                    disabled={! enabled()}>\n              {claimLabel}\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nClaim.propTypes = {\n  vault: PropTypes.object.isRequired\n}\n\nexport default Claim\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Image from 'next/image'\nimport VaultActions from './vaultActions'\nimport Claim from './claim'\nimport { fromWei } from '../helpers/wei'\nimport { formatAmount, toPercentage, toUsd } from '../helpers/format'\n\nconst VaultDetails = props => {\n  const {\n    balance,\n    decimals,\n    earn,\n    pricePerFullShare,\n    shares,\n    tvl,\n    usdPrice,\n    vaultDecimals\n  } = props.vault\n\n  const vault        = props.vault\n  const staked       = shares && fromWei(shares, vaultDecimals)\n  const deposited    = staked?.times(pricePerFullShare)\n  const depositedUsd = toUsd(deposited, decimals, usdPrice)\n  const tvlUsd       = toUsd(tvl, decimals, usdPrice)\n\n  return (\n    <React.Fragment>\n      <div className=\"text-center\">\n        <Image src={`/../images/tokens/${vault.token}.svg`} alt={vault.token} height=\"48\" width=\"48\" />\n\n        <h3 className=\"h4 mt-2 mb-1\">\n          {vault.symbol}\n        </h3>\n\n        <p className=\"small text-muted mb-0\">\n          Uses:\n          <span className=\"ms-2\">\n            {vault.uses}\n          </span>\n        </p>\n\n        <hr className=\"border border-primary border-1 opacity-100\" />\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-9 col-xl-7\">\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Balance\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {balance ? formatAmount(fromWei(balance, decimals), '', 8) : '-'}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Deposited\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {deposited ? formatAmount(fromWei(deposited, decimals), '', 8) : '-'}\n                </p>\n              </div>\n            </div>\n\n            <Claim vault={vault} />\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  APY\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {toPercentage(vault.apy)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Daily\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {toPercentage((vault.apy || 0.0) / 365)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  <abbr title=\"Total assets\">TA</abbr>\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {tvlUsd ? formatAmount(tvlUsd, '$') : '-'}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Earn\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {earn}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <VaultActions allowance={vault.allowance}\n                    apy={vault.apy}\n                    balance={balance}\n                    decimals={decimals}\n                    deposited={deposited}\n                    pid={vault.pid}\n                    pool={vault.pool}\n                    pricePerFullShare={vault.pricePerFullShare}\n                    symbol={vault.symbol}\n                    token={vault.token}\n                    vault={vault}\n                    vaultDecimals={vaultDecimals} />\n\n      <div className=\"text-center mt-4\">\n        <h3 className=\"h6 text-muted text-uppercase\">\n          Your balance\n        </h3>\n\n        <p className=\"fw-bold mb-0\">\n          {depositedUsd ? formatAmount(depositedUsd, '$') : '-'}\n        </p>\n      </div>\n    </React.Fragment>\n  )\n}\n\nVaultDetails.propTypes = {\n  vault: PropTypes.object.isRequired\n}\n\nexport default VaultDetails\n","import PropTypes from 'prop-types'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Back from './back'\nimport VaultDetails from './vaultDetails'\nimport { selectVaults } from '../features/vaultsSlice'\nimport { constantVaultFetch } from '../helpers/vaults'\nimport { selectAddress, selectChainId } from '../features/walletSlice'\n\nconst render = vault => {\n  if (vault) {\n    return <VaultDetails vault={vault} />\n  } else {\n    return (\n      <div className=\"alert alert-warning\">\n        <p className=\"mb-0\">\n          Vault not found\n        </p>\n      </div>\n    )\n  }\n}\n\nconst VaultData = props => {\n  const address  = useSelector(selectAddress)\n  const chainId  = useSelector(selectChainId)\n  const vaults   = useSelector(selectVaults)\n  const dispatch = useDispatch()\n  const vault    = (vaults[chainId] || []).find(vault => vault.key === props.id)\n\n  useEffect(() => {\n    return constantVaultFetch(address, chainId, dispatch)\n  }, [address, chainId, dispatch])\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-lg-9 col-xl-7\">\n        <div className=\"card my-4 shadow-none\">\n          <div className=\"card-body bg-dark border border-primary border-2 rounded px-lg-5 py-lg-4\">\n            <div className=\"text-start mb-0\">\n              <Back />\n            </div>\n\n            <div className=\"mt-4\">\n              {render(vault)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nVaultData.propTypes = {\n  id: PropTypes.string.isRequired\n}\n\nexport default VaultData\n","import PropTypes from 'prop-types'\nimport Header from './header'\nimport Footer from './footer'\nimport Toasts from './toasts'\nimport VaultData from './vaultData'\n\nconst Vault = props => {\n  return (\n    <div className=\"container\">\n      <Header path=\"..\" />\n      <VaultData id={props.id} />\n      <Toasts />\n      <Footer />\n    </div>\n  )\n}\n\nVault.propTypes = {\n  id: PropTypes.string.isRequired\n}\n\nexport default Vault\n","import React from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\nimport Vault from '../../src/components/vault'\n\nconst VaultPage = () => {\n  const router = useRouter()\n  const { id } = router.query\n\n  if (id) {\n    return (\n      <React.Fragment>\n        <Head>\n          <title>2pi Finance</title>\n        </Head>\n\n        <Vault id={id} />\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div className=\"spinner-border text-primary mt-5\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    )\n  }\n}\n\nexport default VaultPage\n","import Link from 'next/link'\n\nconst Back = () => {\n  return (\n    <Link href=\"/\">\n      <a className=\"text-decoration-none\">\n        <div className=\"d-flex align-items-center\">\n          <div className=\"h4 mb-0\">\n            <i className=\"bi-arrow-left\"></i>\n          </div>\n          <div className=\"ms-2\">\n            Back\n          </div>\n        </div>\n      </a>\n    </Link>\n  )\n}\n\nexport default Back\n","import Link from 'next/link'\n\nconst Footer = () => (\n  <footer className=\"my-5 text-center pt-lg-4\">\n    <h2 className=\"h6 mb-4\">Contact us</h2>\n\n    <ul className=\"list-inline lead\">\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://twitter.com/2piFinance\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Tweet us!\">\n            <i className=\"bi-twitter\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://github.com/2pifinance/\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Fork / inspect us!\">\n            <i className=\"bi-github\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://discord.com/invite/h8VG2XcwvT\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Talk with us!\">\n            <i className=\"bi-discord\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://2pifinance.medium.com\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Read us!\">\n            <i className=\"bi-file-text\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"mailto:hello@2pi.finance\">\n          <a title=\"Email us!\">\n            <i className=\"bi-envelope\"></i>\n          </a>\n        </Link>\n      </li>\n    </ul>\n  </footer>\n)\n\nexport default Footer\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  connectAsync,\n  disconnectAsync,\n  selectAddress,\n  selectChainId,\n  selectStatus,\n  supportedChains\n} from '../features/walletSlice'\n\nconst addressLabel = (address, status) => {\n  if (address) {\n    return `${address.substr(0, 6)}...${address.substr(38, 42)}`\n  } else if (status === 'loading') {\n    return 'Connecting...'\n  } else {\n    return 'Connect wallet'\n  }\n}\n\nconst walletIcon = (address, supported) => {\n  if (address && supported) {\n    return 'bi-wallet-fill'\n  } else if (address) {\n    return 'bi-exclamation-diamond-fill'\n  } else {\n    return 'bi-plug-fill'\n  }\n}\nconst Wallet = () => {\n  const address   = useSelector(selectAddress)\n  const chainId   = useSelector(selectChainId)\n  const status    = useSelector(selectStatus)\n  const dispatch  = useDispatch()\n  const supported = isNaN(chainId) || supportedChains.includes(chainId)\n  const border    = supported ? 'primary' : 'danger'\n\n  return (\n    <button type=\"button\"\n            className={`btn btn-outline-${border} btn-sm bg-dark text-primary fw-semi-bold order-0 order-lg-1 mt-3 mt-lg-0`}\n            disabled={status === 'loading'}\n            onClick={() => { address ? dispatch(disconnectAsync()) : dispatch(connectAsync()) }}>\n      <span className=\"me-2\">\n        <i className={walletIcon(address, supported)}></i>\n      </span>\n      {addressLabel(address, status)}\n    </button>\n  )\n}\n\nexport default Wallet\n","import PropTypes from 'prop-types'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport Wallet from './wallet'\n\nconst Header = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-transparent mt-4\">\n    <div className=\"container\">\n      <Link href=\"/\">\n        <a className=\"navbar-brand me-auto pt-lg-2\">\n          <div className=\"mt-1 pt-1\">\n            <Image src={`/${props.path ?? '.'}/images/logo.svg`} alt=\"2pi Finance\" width=\"149\" height=\"24\" />\n          </div>\n        </a>\n      </Link>\n\n      <button className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#menu\"\n              aria-controls=\"menu\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"menu\">\n        <Wallet />\n\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 mt-lg-2 ms-lg-4 order-1 order-lg-0\">\n          <li className=\"nav-item\">\n            <Link href=\"/referrals\">\n              <a className=\"nav-link btn btn-outline-primary text-white me-3 mt-3 mt-lg-0\">\n                Referrals\n              </a>\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link href=\"https://docs.2pi.finance/how-to-guide\">\n              <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\">\n                How-to guide\n              </a>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n)\n\nHeader.propTypes = {\n  path: PropTypes.string\n}\n\nexport default Header\n","import PropTypes from 'prop-types'\nimport React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { toastDestroyed } from '../features/toastsSlice'\n\nconst Toast = props => {\n  const ref      = React.useRef()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const BSToast = require('bootstrap').Toast\n    const element = ref.current\n    const toast   = new BSToast(element, { autohide: props.autohide })\n\n    toast.show()\n\n    element.addEventListener('hidden.bs.toast', () => {\n      dispatch(toastDestroyed(props.title))\n    })\n  })\n\n  return (\n    <div ref={ref}\n         className={`toast border border-${props.style} border-3 bg-dark`}\n         role=\"alert\"\n         aria-live=\"assertive\"\n         aria-atomic=\"true\">\n      <div className=\"toast-header bg-dark\">\n        <span className={`text-${props.style}`}>\n          <i className={`bi-${props.icon} me-2`}></i>\n        </span>\n        <span className=\"me-auto fw-bold\">{props.title}</span>\n        <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n\n      <div className=\"toast-body\">\n        {props.body}\n      </div>\n    </div>\n  )\n}\n\nToast.propTypes = {\n  title:    PropTypes.string.isRequired,\n  body:     PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  icon:     PropTypes.string.isRequired,\n  style:    PropTypes.string.isRequired,\n  autohide: PropTypes.bool.isRequired\n}\n\nexport default Toast\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Toast from './toast'\nimport { selectToasts, toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport {\n  selectAddress,\n  selectChainId,\n  supportedChains\n} from '../features/walletSlice'\n\nconst renderToasts = toasts => {\n  return toasts.map((toast, i) => {\n    return <Toast key={`toast-${i}`}\n                  title={toast.title}\n                  body={toast.body}\n                  icon={toast.icon}\n                  style={toast.style}\n                  autohide={!! toast.autohide} />\n  })\n}\n\nconst Toasts = () => {\n  const toasts   = useSelector(selectToasts)\n  const address  = useSelector(selectAddress)\n  const chainId  = useSelector(selectChainId)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (address && ! supportedChains.includes(chainId)) {\n      dispatch(\n        toastAdded({\n          title: 'Wrong network',\n          body:  'Switch to Polygon Mainnet and try again',\n          icon:  'exclamation-triangle',\n          style: 'danger'\n        })\n      )\n    } else {\n      dispatch(toastDestroyed('Wrong network'))\n    }\n  }, [address, chainId, dispatch])\n\n  if (toasts.length) {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\" className=\"position-fixed top-0 start-0 end-0\">\n        <div className=\"toast-container p-3 ms-0 ms-lg-4 mt-5 pt-5\">\n          {renderToasts(toasts)}\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Toasts\n","import { toWei, fromWei } from './wei'\n\nexport const formatAmount = (amount, prefix, decimals = 2) => {\n  const order = Math.floor(Math.log10(Math.abs(amount)) / 3)\n\n  if (order < 0) {\n    return `${prefix || ''}${amount.toFixed(decimals)}`\n  }\n\n  const units  = ['', 'K', 'M', 'B', 'T', 'Q']\n  const number = (amount / 1000 ** order).toFixed(decimals)\n\n  return `${prefix || ''}${number}${units[order]}`\n}\n\nexport const decimalPlaces = (decimals, max = 8) => {\n  return decimals.comparedTo(max) > 0 ? max : decimals.toNumber()\n}\n\nexport const toUsd = (amountInWei, decimals, usdPrice) => {\n  const amount = amountInWei && fromWei(amountInWei, decimals)\n\n  return amount?.times(usdPrice)\n}\n\nexport const toWeiFormatted = (amount, decimals) => {\n  return toWei(amount, decimals).toFixed(0)\n}\n\nexport const fromWeiFormatted = (amount, decimals) => {\n  return formatAmount(fromWei(amount, decimals))\n}\n\nexport const toPercentage = number => {\n  number      = (number || 0.0) * 100.0\n  const fixed = (number > 0.0 && Math.abs(number) < 10) ? 3 : 2\n\n  return `${formatAmount(number, '', fixed)}%`\n}\n","import PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { getBlockExplorerUrl } from '../data/networks'\nimport { toastAdded } from '../features/toastsSlice'\nimport { selectChainId } from '../features/walletSlice'\n\nconst TransactionLink = props => {\n  const chainId     = useSelector(selectChainId)\n  const explorerUrl = getBlockExplorerUrl(chainId)\n\n  if (explorerUrl) {\n    const href = `${explorerUrl}/tx/${props.hash}`\n\n    return (\n      <a href={href} target=\"_blank\" rel=\"noreferrer\" title={props.text}>\n        {props.text || props.hash}\n      </a>\n    )\n  } else {\n    return props.hash\n  }\n}\n\nTransactionLink.propTypes = {\n  hash: PropTypes.string.isRequired,\n  text: PropTypes.string\n}\n\nexport const transactionSent = (hash, dispatch) => {\n  dispatch(\n    toastAdded({\n      title:    'Transaction sent',\n      body:     <TransactionLink hash={hash} text={hash} />,\n      icon:     'check-circle',\n      style:    'success',\n      autohide: true\n    })\n  )\n}\n","import {\n  fetchVaultsDataAsync,\n  newVaultFetch,\n  resetVaults\n} from '../features/vaultsSlice'\nimport { defaultChain, supportedChains } from '../features/walletSlice'\n\nconst FETCH_INTERVAL = 30 * 1000\n\nexport const constantVaultFetch = (address, chainId, dispatch) => {\n  const delay     = address ? FETCH_INTERVAL : FETCH_INTERVAL * 6\n  const fetchData = () => {\n    const skip      = chainId !== defaultChain && ! address\n    const supported = supportedChains.includes(chainId)\n\n    if (skip && supported) {\n      return\n    }\n\n    if (supported) {\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n    } else {\n      dispatch(resetVaults())\n    }\n  }\n\n  const interval = setInterval(fetchData, delay)\n\n  fetchData()\n\n  return () => clearInterval(interval)\n}\n","import BigNumber from 'bignumber.js'\n\nexport const fromWei = (amount, decimals) => {\n  return amount.div(new BigNumber(10).pow(decimals))\n}\n\nexport const toWei = (amount, decimals) => {\n  return amount.times(new BigNumber(10).pow(decimals))\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/vaults/[id]\",\n      function () {\n        return require(\"private-next-pages/vaults/[id].js\");\n      }\n    ]);\n  ","module.exports = require('./dist/client/router')\n"],"sourceRoot":""}