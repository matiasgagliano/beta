{"version":3,"sources":["webpack://_N_E/./src/helpers/transactions.js","webpack://_N_E/./src/components/approve.js","webpack://_N_E/./src/components/connect.js","webpack://_N_E/./src/components/deposit.js","webpack://_N_E/./src/data/constants.js","webpack://_N_E/./src/components/withdraw.js","webpack://_N_E/./src/components/vaultActions.js","webpack://_N_E/./src/components/vaultClaim.js","webpack://_N_E/./src/components/vaultDetails.js","webpack://_N_E/./src/components/vaultData.js","webpack://_N_E/./src/components/vault.js","webpack://_N_E/./pages/vaults/[id].js","webpack://_N_E/./src/components/back.js","webpack://_N_E/./src/components/footer.js","webpack://_N_E/./src/components/wallet.js","webpack://_N_E/./src/components/header.js","webpack://_N_E/./src/components/toast.js","webpack://_N_E/./src/components/toasts.js","webpack://_N_E/./src/helpers/format.js","webpack://_N_E/./src/helpers/vaults.js","webpack://_N_E/./src/helpers/wei.js","webpack://_N_E/?0330","webpack://_N_E/./node_modules/next/router.js"],"names":["TransactionLink","props","chainId","useSelector","selectChainId","explorerUrl","getBlockExplorerUrl","href","hash","target","rel","title","text","transactionSent","dispatch","toastAdded","body","icon","style","autohide","useDispatch","useState","deposit","setDeposit","useAll","setUseAll","buttonLabel","setButtonLabel","status","setStatus","useEffect","test","amount","toWei","BigNumber","decimals","balance","comparedTo","length","onChange","e","value","setMax","places","decimalPlaces","fromWei","toFixed","balanceId","token","className","type","id","onKeyDown","preventDefault","disabled","isZero","onClick","htmlFor","formatAmount","symbol","includes","address","vaultAddress","vault","tokenContract","allowance","methods","approve","send","from","on","then","toastDestroyed","newVaultFetch","fetchVaultsDataAsync","catch","error","message","selectStatus","connectAsync","referral","setReferral","depositLabel","setDepositLabel","localStorage","getItem","roundingMode","maxMaticDepositAmount","reserve","minus","call","vaultContract","depositMATIC","depositAll","pid","toWeiFormatted","withdraw","setWithdraw","withdrawLabel","setWithdrawLabel","deposited","handleWithdrawClick","shares","div","pricePerFullShare","vaultDecimals","handleWithdrawAllClick","withdrawAll","depositedId","apy","actions","selectAddress","web3","selectWeb3","action","setAction","abi","eth","Contract","tokenData","supportedChains","require","default","getTokenData","vaultData","pool","getVaultData","renderBalanceAction","chainSupportsClaim","claimLabel","setClaimLabel","pending","pendingTokens","getVaultContract","harvest","isGreaterThan","earn","tvl","usdPrice","staked","times","depositedUsd","toUsd","tvlUsd","src","alt","height","width","uses","toPercentage","render","vaults","selectVaults","find","key","constantVaultFetch","path","useRouter","query","role","addressLabel","substr","walletIcon","supported","isNaN","border","disconnectAsync","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","ref","React","BSToast","element","current","show","addEventListener","aria-live","aria-atomic","data-bs-dismiss","renderToasts","toasts","map","toast","i","selectToasts","prefix","order","Math","floor","log10","abs","units","number","max","toNumber","amountInWei","fixed","fetchData","skip","defaultChain","resetVaults","interval","setInterval","FETCH_INTERVAL","clearInterval","pow","window","__NEXT_P","push","module","exports"],"mappings":"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","file":"static/chunks/pages/vaults/[id]-3416db479f4c1794faa5.js","sourcesContent":["import PropTypes from 'prop-types'\nimport { useSelector } from 'react-redux'\nimport { getBlockExplorerUrl } from '../data/networks'\nimport { toastAdded } from '../features/toastsSlice'\nimport { selectChainId } from '../features/walletSlice'\n\nconst TransactionLink = props => {\n  const chainId     = useSelector(selectChainId)\n  const explorerUrl = getBlockExplorerUrl(chainId)\n\n  if (explorerUrl) {\n    const href = `${explorerUrl}/tx/${props.hash}`\n\n    return (\n      <a href={href} target=\"_blank\" rel=\"noreferrer\" title={props.text}>\n        {props.text || props.hash}\n      </a>\n    )\n  } else {\n    return props.hash\n  }\n}\n\nTransactionLink.propTypes = {\n  hash: PropTypes.string.isRequired,\n  text: PropTypes.string\n}\n\nexport const transactionSent = (hash, dispatch) => {\n  dispatch(\n    toastAdded({\n      title:    'Transaction sent',\n      body:     <TransactionLink hash={hash} text={hash} />,\n      icon:     'check-circle',\n      style:    'success',\n      autohide: true\n    })\n  )\n}\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\n\nconst Approve = props => {\n  const dispatch                      = useDispatch()\n  const [deposit, setDeposit]         = useState('')\n  const [useAll, setUseAll]           = useState(false)\n  const [buttonLabel, setButtonLabel] = useState('Approve')\n  const [status, setStatus]           = useState('blank')\n\n  useEffect(() => {\n    if (status !== 'approve') {\n      if (/^\\d*\\.?\\d*$/.test(deposit) && +deposit) {\n        const amount = toWei(new BigNumber(deposit), props.decimals)\n\n        setStatus(props.balance.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else if (deposit.length === 0) {\n        setStatus('blank')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [deposit, status, props.balance, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    setUseAll(false)\n    setDeposit(value)\n  }\n\n  const handleClick = () => {\n    const address       = props.address\n    const vaultAddress  = props.vault.address\n    const tokenContract = props.tokenContract()\n    const allowance     = toWei(new BigNumber('1e58'), props.decimals).toFixed()\n\n    setButtonLabel('Approve...')\n    setStatus('approve')\n\n    tokenContract.methods.approve(vaultAddress, allowance).send({\n      from: address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setStatus('blank')\n      setButtonLabel('Approve')\n      dispatch(toastDestroyed('Approve rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Approval done',\n          body:     'Your approval was successful, you can now deposit',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setStatus('blank')\n      setButtonLabel('Approve')\n      dispatch(\n        toastAdded({\n          title:    'Approve rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places = decimalPlaces(props.decimals)\n\n    setUseAll(true)\n    setDeposit(fromWei(props.balance, props.decimals).toFixed(places))\n  }\n\n  const balanceId = () => `balance-${props.token}`\n\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-1\">\n        <input type=\"number\"\n               className=\"form-control\"\n               id={balanceId()}\n               onKeyDown={e => onChange(e) && e.preventDefault()}\n               onChange={onChange}\n               value={deposit} />\n        <button type=\"button\"\n                className=\"btn btn-link bg-input\"\n                disabled={props.balance?.isZero() || useAll}\n                onClick={setMax}>\n          Max\n        </button>\n      </div>\n\n      <div className=\"text-end\">\n        <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n               htmlFor={balanceId()}\n               onClick={setMax}>\n          Wallet balance: {formatAmount(fromWei(props.balance, props.decimals), '', 8)} {props.symbol}\n        </label>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <div className=\"row justify-content-center mt-4 mb-3\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                    disabled={['invalid', 'approve'].includes(status)}\n                    onClick={handleClick}>\n              {buttonLabel}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nApprove.propTypes = {\n  address:       PropTypes.string.isRequired,\n  balance:       PropTypes.object.isRequired,\n  decimals:      PropTypes.object.isRequired,\n  symbol:        PropTypes.string.isRequired,\n  token:         PropTypes.string.isRequired,\n  tokenContract: PropTypes.func.isRequired,\n  vault:         PropTypes.object.isRequired,\n  web3:          PropTypes.object.isRequired\n}\n\nexport default Approve\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { connectAsync, selectStatus } from '../features/walletSlice'\n\nconst Connect = () => {\n  const status   = useSelector(selectStatus)\n  const dispatch = useDispatch()\n\n  const buttonLabel = () => {\n    if (status === 'loading') {\n      return 'Connecting...'\n    } else if (status === 'success') {\n      return 'Connected'\n    } else {\n      return 'Connect'\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row justify-content-center my-4\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-primary fw-bold\"\n                    disabled={['loading', 'success'].includes(status)}\n                    onClick={() => { dispatch(connectAsync()) }}>\n              {buttonLabel()}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n    </React.Fragment>\n  )\n}\n\nexport default Connect\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount, toWeiFormatted } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport { selectChainId } from '../features/walletSlice'\nimport { ZERO_ADDRESS } from '../data/constants'\n\nconst Deposit = props => {\n  const chainId                         = useSelector(selectChainId)\n  const dispatch                        = useDispatch()\n  const [referral, setReferral]         = useState('')\n  const [deposit, setDeposit]           = useState('')\n  const [useAll, setUseAll]             = useState(false)\n  const [depositLabel, setDepositLabel] = useState('Deposit')\n  const [status, setStatus]             = useState('blank')\n\n  useEffect(() => {\n    setReferral(localStorage.getItem('referral') || ZERO_ADDRESS)\n  }, [])\n\n  useEffect(() => {\n    if (status !== 'deposit') {\n      if (/^\\d*\\.?\\d*$/.test(deposit) && +deposit) {\n        const amount = toWei(new BigNumber(deposit), props.decimals)\n\n        setStatus(props.balance.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [deposit, status, props.balance, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    if (status === 'deposit') {\n      setStatus('invalid')\n    }\n\n    setUseAll(false)\n    setDeposit(value)\n  }\n\n  const handleDepositClick = () => {\n    const vaultContract = props.vaultContract()\n    let   amount        = toWeiFormatted(new BigNumber(deposit), props.decimals)\n\n    setDepositLabel('Deposit...')\n    setStatus('deposit')\n\n    let call\n\n    // Native Matic vault\n    if (vaultContract.methods.depositMATIC) {\n      call = vaultContract.methods.depositMATIC().send({\n        from:  props.address,\n        value: amount\n      })\n    } else if (chainId === 80001) {\n      call = vaultContract.methods.deposit(props.pid, amount, referral).send({\n        from: props.address\n      })\n    } else {\n      call = vaultContract.methods.deposit(amount).send({ from: props.address })\n    }\n\n    call.on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setDeposit('')\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(toastDestroyed('Deposit rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Deposit approved',\n          body:     'Your deposit was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(\n        toastAdded({\n          title:    'Deposit rejected',\n          body:     'Your deposit has been rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const handleDepositAllClick = () => {\n    const vaultContract = props.vaultContract()\n\n    setMax()\n    setDepositLabel('Deposit...')\n    setStatus('deposit')\n\n    let call\n\n    if (vaultContract.methods.depositMATIC) {\n      let amount = maxMaticDepositAmount(props.balance)\n\n      if (!amount)\n        return\n\n      call = vaultContract.methods.depositMATIC().send({\n        from: props.address, value: amount.toFixed()\n      })\n    } else if (chainId === 80001) {\n      call = vaultContract.methods.depositAll(props.pid).send({\n        from: props.address\n      })\n    } else {\n      call = vaultContract.methods.depositAll().send({ from: props.address })\n    }\n\n    call.on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setDeposit('')\n      setStatus('blank')\n      setDepositLabel('Deposit')\n      dispatch(toastDestroyed('Deposit all rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Deposit all approved',\n          body:     'Your deposit was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setDepositLabel('Deposit')\n      setStatus('blank')\n      dispatch(\n        toastAdded({\n          title:    'Deposit all rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places       = decimalPlaces(props.decimals)\n    const roundingMode = BigNumber.ROUND_DOWN\n\n    setUseAll(true)\n    setDeposit(\n      fromWei(props.balance, props.decimals).toFixed(places, roundingMode)\n    )\n  }\n\n  const balanceId = () => `balance-${props.token}`\n\n  const maxMaticDepositAmount = amount => {\n    const reserve = new BigNumber(0.025e18)\n\n    if (amount.comparedTo(reserve) > 0)\n      return amount.minus(reserve)\n    else {\n      setDepositLabel('Deposit')\n      setStatus('blank')\n      dispatch(\n        toastAdded({\n          title:    'Deposit all rejected',\n          body:     'Deposit should be greater than 0.025 MATIC',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-1\">\n        <input type=\"number\"\n               className=\"form-control\"\n               id={balanceId()}\n               onKeyDown={e => onChange(e) && e.preventDefault()}\n               onChange={onChange}\n               value={deposit} />\n        <button type=\"button\"\n                className=\"btn btn-link bg-input\"\n                disabled={props.balance?.isZero() || useAll}\n                onClick={setMax}>\n          Max\n        </button>\n      </div>\n\n      <div className=\"text-end\">\n        <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n               htmlFor={balanceId()}\n               onClick={setMax}>\n          Wallet balance: {formatAmount(fromWei(props.balance, props.decimals), '', 8)} {props.symbol}\n        </label>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <div className=\"row justify-content-center mt-4 mb-3\">\n        <div className=\"col-lg-6\">\n          <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                    disabled={status !== 'valid'}\n                    onClick={useAll ? handleDepositAllClick : handleDepositClick}>\n              {depositLabel}\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nDeposit.propTypes = {\n  address:       PropTypes.string.isRequired,\n  balance:       PropTypes.object.isRequired,\n  decimals:      PropTypes.object.isRequired,\n  pid:           PropTypes.string.isRequired,\n  symbol:        PropTypes.string.isRequired,\n  token:         PropTypes.string.isRequired,\n  vaultContract: PropTypes.func.isRequired\n}\n\nexport default Deposit\n","export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { fromWei, toWei } from '../helpers/wei'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { decimalPlaces, formatAmount, toWeiFormatted } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport { selectChainId } from '../features/walletSlice'\n\nconst Withdraw = props => {\n  const chainId                                 = useSelector(selectChainId)\n  const dispatch                                = useDispatch()\n  const [withdraw, setWithdraw]                 = useState('')\n  const [useAll, setUseAll]                     = useState(false)\n  const [withdrawLabel, setWithdrawLabel]       = useState('Withdraw')\n  const [status, setStatus]                     = useState('blank')\n\n  useEffect(() => {\n    if (status !== 'withdraw') {\n      if (/^\\d*\\.?\\d*$/.test(withdraw) && +withdraw) {\n        const amount = toWei(new BigNumber(withdraw), props.decimals)\n\n        setStatus(props.deposited.comparedTo(amount) >= 0 ? 'valid' : 'invalid')\n      } else {\n        setStatus('invalid')\n      }\n    }\n  }, [withdraw, status, props.deposited, props.decimals])\n\n  const onChange = e => {\n    const value = e.target.value\n\n    if (status === 'withdraw') {\n      setStatus('invalid')\n    }\n\n    setUseAll(false)\n    setWithdraw(value)\n  }\n\n  const handleWithdrawClick = () => {\n    const vaultContract = props.vaultContract()\n    const withdrawInWei = toWei(new BigNumber(withdraw), props.decimals)\n    const shares        = withdrawInWei.div(props.pricePerFullShare)\n    const amount        = toWeiFormatted(shares, props.vaultDecimals)\n\n    setWithdrawLabel('Withdraw...')\n    setStatus('withdraw')\n\n    let call\n\n    if (chainId === 80001) {\n      call = vaultContract.methods.withdraw(props.pid, amount)\n    } else {\n      call = vaultContract.methods.withdraw(amount)\n    }\n\n    call.send({\n      from: props.address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setWithdraw('')\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(toastDestroyed('Withdraw rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Withdraw approved',\n          body:     'Your withdraw was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(\n        toastAdded({\n          title:    'Withdraw rejected',\n          body:     'Your withdraw was rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const handleWithdrawAllClick = () => {\n    const vaultContract = props.vaultContract()\n\n    setMax()\n    setWithdrawLabel('Withdraw...')\n    setStatus('withdraw')\n\n    let call\n\n    if (chainId === 80001) {\n      call = vaultContract.methods.withdrawAll(props.pid)\n    } else {\n      call = vaultContract.methods.withdrawAll()\n    }\n\n    call.send({\n      from: props.address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setWithdraw('')\n      setStatus('withdraw')\n      setWithdrawLabel('Withdraw')\n      dispatch(toastDestroyed('Withdraw all rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Withdraw all approved',\n          body:     'Your withdraw was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(error => {\n      setStatus('blank')\n      setWithdrawLabel('Withdraw')\n      dispatch(\n        toastAdded({\n          title:    'Withdraw all rejected',\n          body:     error.message,\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const setMax = () => {\n    const places       = decimalPlaces(props.decimals)\n    const roundingMode = BigNumber.ROUND_DOWN\n\n    setUseAll(true)\n    setWithdraw(\n      fromWei(props.deposited, props.decimals).toFixed(places, roundingMode)\n    )\n  }\n\n  const depositedId = () => `deposited-${props.token}`\n\n  const actions = () => {\n    if (+props.apy > 0) {\n      return (\n        <React.Fragment>\n          <div className=\"input-group mb-1\">\n            <input type=\"number\"\n                   className=\"form-control\"\n                   id={depositedId()}\n                   onKeyDown={e => onChange(e) && e.preventDefault()}\n                   onChange={onChange}\n                   value={withdraw} />\n            <button type=\"button\"\n                    className=\"btn btn-link bg-input\"\n                    disabled={props.deposited?.isZero() || useAll}\n                    onClick={setMax}>\n              Max\n            </button>\n          </div>\n\n          <div className=\"text-end\">\n            <label className=\"small text-uppercase text-decoration-underline-dotted cursor-pointer\"\n                   htmlFor={depositedId()}\n                   onClick={setMax}>\n              Deposited: {formatAmount(fromWei(props.deposited, props.decimals), '', 8)} {props.symbol}\n            </label>\n          </div>\n\n          <hr className=\"border border-primary border-1 opacity-100\" />\n\n          <div className=\"row justify-content-center mt-4 mb-3\">\n            <div className=\"col-lg-6\">\n              <div className=\"d-grid gap-2 mb-3 mb-lg-0\">\n                <button type=\"button\"\n                        className=\"btn btn-outline-primary bg-dark text-white fw-bold\"\n                        disabled={status !== 'valid'}\n                        onClick={useAll ? handleWithdrawAllClick : handleWithdrawClick}>\n                  {withdrawLabel}\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"alert alert-info py-2 my-4\">\n            <p className=\"text-center small mb-0\">\n              Withdrawals are temporarily disabled\n            </p>\n          </div>\n\n          <hr className=\"border border-primary border-1 opacity-100\" />\n        </React.Fragment>\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {actions()}\n    </React.Fragment>\n  )\n}\n\nWithdraw.propTypes = {\n  address:           PropTypes.string.isRequired,\n  apy:               PropTypes.number.isRequired,\n  decimals:          PropTypes.object.isRequired,\n  deposited:         PropTypes.object.isRequired,\n  pid:               PropTypes.string.isRequired,\n  pricePerFullShare: PropTypes.object.isRequired,\n  symbol:            PropTypes.string.isRequired,\n  token:             PropTypes.string.isRequired,\n  vaultContract:     PropTypes.func.isRequired,\n  vaultDecimals:     PropTypes.object.isRequired\n}\n\nexport default Withdraw\n","import PropTypes from 'prop-types'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport Approve from './approve'\nimport Connect from './connect'\nimport Deposit from './deposit'\nimport Withdraw from './withdraw'\nimport { selectStatus } from '../features/vaultsSlice'\nimport {\n  selectAddress,\n  selectChainId,\n  selectWeb3,\n  supportedChains\n} from '../features/walletSlice'\n\nconst VaultActions = props => {\n  const status              = useSelector(selectStatus)\n  const address             = useSelector(selectAddress)\n  const chainId             = useSelector(selectChainId)\n  const web3                = useSelector(selectWeb3)\n  const [action, setAction] = useState('deposit')\n\n  const getTokenData = () => {\n    if (supportedChains.includes(chainId)) {\n      return require(`../abis/tokens/${chainId}/${props.token}`).default\n    }\n  }\n\n  const getVaultData = () => {\n    if (supportedChains.includes(chainId)) {\n      if (chainId === 80001) {\n        return require(`../abis/main/${chainId}/archimedes`).default\n      } else {\n        return require(`../abis/vaults/${chainId}/${props.pool}-${props.token}`).default\n      }\n    }\n  }\n\n  const tokenContract = (token) => {\n    return () => {\n      if (token.abi) {\n        return new web3.eth.Contract(token.abi, token.address)\n      }\n    }\n  }\n\n  const vaultContract = (vault) => {\n    return () => {\n      return new web3.eth.Contract(vault.abi, vault.address)\n    }\n  }\n\n  const canDeposit = () => {\n    return props.allowance.comparedTo(props.balance) > 0\n  }\n\n  const tokenData = getTokenData()\n  const vaultData = getVaultData()\n\n  const renderBalanceAction = () => {\n    const { balance, decimals, pid, symbol, token } = props\n\n    if (canDeposit()) {\n      return <Deposit address={address}\n                      balance={balance}\n                      decimals={decimals}\n                      pid={pid}\n                      symbol={symbol}\n                      token={token}\n                      vaultContract={vaultContract(vaultData)} />\n    } else {\n      return <Approve address={address}\n                      balance={balance}\n                      decimals={decimals}\n                      symbol={symbol}\n                      token={token}\n                      tokenContract={tokenContract(tokenData)}\n                      vault={vaultData}\n                      web3={web3} />\n    }\n  }\n\n  const renderAction = () => {\n    if (action === 'deposit') {\n      return renderBalanceAction()\n    } else {\n      return <Withdraw address={address}\n                       apy={props.apy}\n                       decimals={props.decimals}\n                       deposited={props.deposited}\n                       pid={props.pid}\n                       pricePerFullShare={props.pricePerFullShare}\n                       symbol={props.symbol}\n                       token={props.token}\n                       vaultContract={vaultContract(vaultData)}\n                       vaultDecimals={props.vaultDecimals} />\n    }\n  }\n\n  const renderActions = () => {\n    if (['loaded', 'loading', 'succeded'].includes(status) && props.deposited) {\n      return (\n        <React.Fragment>\n          <ul className=\"nav nav-pills mb-3\">\n            <li className=\"nav-item\">\n              <button type=\"button\"\n                      className={`nav-link ${action === 'deposit' ? 'active' : ''}`}\n                      onClick={() => setAction('deposit')}>\n                Deposit\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button type=\"button\"\n                      className={`nav-link ${action === 'withdraw' ? 'active' : ''}`}\n                      onClick={() => setAction('withdraw')}>\n                Withdraw\n              </button>\n            </li>\n          </ul>\n\n          {renderAction()}\n        </React.Fragment>\n      )\n    } else {\n      return <Connect />\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {renderActions()}\n    </React.Fragment>\n  )\n}\n\nVaultActions.propTypes = {\n  allowance:         PropTypes.object,\n  apy:               PropTypes.number,\n  balance:           PropTypes.object,\n  decimals:          PropTypes.object,\n  deposited:         PropTypes.object,\n  pid:               PropTypes.string.isRequired,\n  pool:              PropTypes.string.isRequired,\n  pricePerFullShare: PropTypes.object,\n  symbol:            PropTypes.string.isRequired,\n  token:             PropTypes.string.isRequired,\n  vaultDecimals:     PropTypes.object\n}\n\nexport default VaultActions\n","import PropTypes from 'prop-types'\nimport BigNumber from 'bignumber.js'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport { fetchVaultsDataAsync, newVaultFetch } from '../features/vaultsSlice'\nimport { fromWei } from '../helpers/wei'\nimport { formatAmount } from '../helpers/format'\nimport { transactionSent } from '../helpers/transactions'\nimport {\n  selectAddress,\n  selectChainId,\n  selectWeb3\n} from '../features/walletSlice'\n\nconst VaultClaim = props => {\n  const address                     = useSelector(selectAddress)\n  const chainId                     = useSelector(selectChainId)\n  const web3                        = useSelector(selectWeb3)\n  const dispatch                    = useDispatch()\n  const chainSupportsClaim          = chainId === 80001\n  const [claimLabel, setClaimLabel] = useState('Claim')\n  const [status, setStatus]         = useState('blank')\n\n  const pendingTokens = vault => {\n    const decimals               = new BigNumber(18) // just to save a call\n    const { pendingTokens, pid } = vault\n\n    return pid && pendingTokens && fromWei(pendingTokens, decimals)\n  }\n\n  const getVaultContract = () => {\n    const vault = require(`../abis/main/${chainId}/archimedes`).default\n\n    return new web3.eth.Contract(vault.abi, vault.address)\n  }\n\n  const handleClick = () => {\n    const vaultContract = getVaultContract()\n\n    setClaimLabel('Claim...')\n    setStatus('claim')\n\n    vaultContract.methods.harvest(props.vault.pid).send({\n      from: address\n    }).on('transactionHash', hash => {\n      transactionSent(hash, dispatch)\n    }).then(() => {\n      setStatus('blank')\n      setClaimLabel('Claim')\n      dispatch(toastDestroyed('Claim rejected'))\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n      dispatch(\n        toastAdded({\n          title:    'Claim approved',\n          body:     'Your claim was successful',\n          icon:     'check-circle',\n          style:    'success',\n          autohide: true\n        })\n      )\n    }).catch(() => {\n      setStatus('blank')\n      setClaimLabel('Claim')\n      dispatch(\n        toastAdded({\n          title:    'Claim rejected',\n          body:     'Your claim was rejected, please check the explorer and try again',\n          icon:     'exclamation-triangle',\n          style:    'danger',\n          autohide: true\n        })\n      )\n    })\n  }\n\n  const pending = pendingTokens(props.vault)\n\n  const enabled = () => {\n    return status === 'blank' && chainSupportsClaim && pending?.isGreaterThan(0)\n  }\n\n  if (props.vault.pid) {\n    return (\n      <div className=\"row my-2\">\n        <div className=\"col-6 text-start\">\n          <p className=\"text-muted fw-bold mb-0\">\n            2pi earned\n          </p>\n        </div>\n        <div className=\"col-6 text-end\">\n          <p className=\"fw-bold mb-1\">\n            {pending ? formatAmount(pending, '', 8) : '-'}\n          </p>\n          <p className=\"mb-0\">\n            <button type=\"button\"\n                    className=\"btn btn-sm btn-dark\"\n                    onClick={handleClick}\n                    disabled={! enabled()}>\n              {claimLabel}\n            </button>\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nVaultClaim.propTypes = {\n  vault: PropTypes.object.isRequired\n}\n\nexport default VaultClaim\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Image from 'next/image'\nimport VaultActions from './vaultActions'\nimport VaultClaim from './vaultClaim'\nimport { fromWei } from '../helpers/wei'\nimport { formatAmount, toPercentage, toUsd } from '../helpers/format'\n\nconst VaultDetails = props => {\n  const {\n    balance,\n    decimals,\n    earn,\n    pricePerFullShare,\n    shares,\n    tvl,\n    usdPrice,\n    vaultDecimals\n  } = props.vault\n\n  const vault        = props.vault\n  const staked       = shares && fromWei(shares, vaultDecimals)\n  const deposited    = staked?.times(pricePerFullShare)\n  const depositedUsd = toUsd(deposited, decimals, usdPrice)\n  const tvlUsd       = toUsd(tvl, decimals, usdPrice)\n\n  return (\n    <React.Fragment>\n      <div className=\"text-center\">\n        <Image src={`/../images/tokens/${vault.token}.svg`} alt={vault.token} height=\"48\" width=\"48\" />\n\n        <h3 className=\"h4 mt-2 mb-1\">\n          {vault.symbol}\n        </h3>\n\n        <p className=\"small text-muted mb-0\">\n          Uses:\n          <span className=\"ms-2\">\n            {vault.uses}\n          </span>\n        </p>\n\n        <hr className=\"border border-primary border-1 opacity-100\" />\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-9 col-xl-7\">\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Balance\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {balance ? formatAmount(fromWei(balance, decimals), '', 8) : '-'}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Deposited\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {deposited ? formatAmount(fromWei(deposited, decimals), '', 8) : '-'}\n                </p>\n              </div>\n            </div>\n\n            <VaultClaim vault={vault} />\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  APY\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {toPercentage(vault.apy)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Daily\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {toPercentage((vault.apy || 0.0) / 365)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  <abbr title=\"Total assets\">TA</abbr>\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {tvlUsd ? formatAmount(tvlUsd, '$') : '-'}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"row my-2\">\n              <div className=\"col-6 text-start\">\n                <p className=\"text-muted fw-bold mb-0\">\n                  Earn\n                </p>\n              </div>\n              <div className=\"col-6 text-end\">\n                <p className=\"fw-bold mb-0\">\n                  {earn}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <hr className=\"border border-primary border-1 opacity-100\" />\n\n      <VaultActions allowance={vault.allowance}\n                    apy={vault.apy}\n                    balance={balance}\n                    decimals={decimals}\n                    deposited={deposited}\n                    pid={vault.pid}\n                    pool={vault.pool}\n                    pricePerFullShare={vault.pricePerFullShare}\n                    symbol={vault.symbol}\n                    token={vault.token}\n                    vault={vault}\n                    vaultDecimals={vaultDecimals} />\n\n      <div className=\"text-center mt-4\">\n        <h3 className=\"h6 text-muted text-uppercase\">\n          Your balance\n        </h3>\n\n        <p className=\"fw-bold mb-0\">\n          {depositedUsd ? formatAmount(depositedUsd, '$') : '-'}\n        </p>\n      </div>\n    </React.Fragment>\n  )\n}\n\nVaultDetails.propTypes = {\n  vault: PropTypes.object.isRequired\n}\n\nexport default VaultDetails\n","import PropTypes from 'prop-types'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Back from './back'\nimport VaultDetails from './vaultDetails'\nimport { selectVaults } from '../features/vaultsSlice'\nimport { constantVaultFetch } from '../helpers/vaults'\nimport { selectAddress, selectChainId } from '../features/walletSlice'\n\nconst render = vault => {\n  if (vault) {\n    return <VaultDetails vault={vault} />\n  } else {\n    return (\n      <div className=\"alert alert-warning\">\n        <p className=\"mb-0\">\n          Vault not found\n        </p>\n      </div>\n    )\n  }\n}\n\nconst VaultData = props => {\n  const address  = useSelector(selectAddress)\n  const chainId  = useSelector(selectChainId)\n  const vaults   = useSelector(selectVaults)\n  const dispatch = useDispatch()\n  const vault    = (vaults[chainId] || []).find(vault => vault.key === props.id)\n\n  useEffect(() => {\n    return constantVaultFetch(address, chainId, dispatch)\n  }, [address, chainId, dispatch])\n\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col-lg-9 col-xl-7\">\n        <div className=\"card my-4 shadow-none\">\n          <div className=\"card-body bg-dark border border-primary border-2 rounded px-lg-5 py-lg-4\">\n            <div className=\"text-start mb-0\">\n              <Back />\n            </div>\n\n            <div className=\"mt-4\">\n              {render(vault)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nVaultData.propTypes = {\n  id: PropTypes.string.isRequired\n}\n\nexport default VaultData\n","import PropTypes from 'prop-types'\nimport Header from './header'\nimport Footer from './footer'\nimport Toasts from './toasts'\nimport VaultData from './vaultData'\n\nconst Vault = props => {\n  return (\n    <div className=\"container\">\n      <Header path=\"..\" />\n      <VaultData id={props.id} />\n      <Toasts />\n      <Footer />\n    </div>\n  )\n}\n\nVault.propTypes = {\n  id: PropTypes.string.isRequired\n}\n\nexport default Vault\n","import React from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\nimport Vault from '../../src/components/vault'\n\nconst VaultPage = () => {\n  const router = useRouter()\n  const { id } = router.query\n\n  if (id) {\n    return (\n      <React.Fragment>\n        <Head>\n          <title>2pi Finance</title>\n        </Head>\n\n        <Vault id={id} />\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div className=\"spinner-border text-primary mt-5\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    )\n  }\n}\n\nexport default VaultPage\n","import Link from 'next/link'\n\nconst Back = () => {\n  return (\n    <Link href=\"/\">\n      <a className=\"text-decoration-none\">\n        <div className=\"d-flex align-items-center\">\n          <div className=\"h4 mb-0\">\n            <i className=\"bi-arrow-left\"></i>\n          </div>\n          <div className=\"ms-2\">\n            Back\n          </div>\n        </div>\n      </a>\n    </Link>\n  )\n}\n\nexport default Back\n","import Link from 'next/link'\n\nconst Footer = () => (\n  <footer className=\"my-5 text-center pt-lg-4\">\n    <h2 className=\"h6 mb-4\">Contact us</h2>\n\n    <ul className=\"list-inline lead\">\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://twitter.com/2piFinance\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Tweet us!\">\n            <i className=\"bi-twitter\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://github.com/2pifinance/\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Fork / inspect us!\">\n            <i className=\"bi-github\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://discord.com/invite/h8VG2XcwvT\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Talk with us!\">\n            <i className=\"bi-discord\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"https://2pifinance.medium.com\">\n          <a target=\"_blank\" rel=\"noreferrer\" title=\"Read us!\">\n            <i className=\"bi-file-text\"></i>\n          </a>\n        </Link>\n      </li>\n      <li className=\"list-inline-item mx-2\">\n        <Link href=\"mailto:hello@2pi.finance\">\n          <a title=\"Email us!\">\n            <i className=\"bi-envelope\"></i>\n          </a>\n        </Link>\n      </li>\n    </ul>\n  </footer>\n)\n\nexport default Footer\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  connectAsync,\n  disconnectAsync,\n  selectAddress,\n  selectChainId,\n  selectStatus,\n  supportedChains\n} from '../features/walletSlice'\n\nconst addressLabel = (address, status) => {\n  if (address) {\n    return `${address.substr(0, 6)}...${address.substr(38, 42)}`\n  } else if (status === 'loading') {\n    return 'Connecting...'\n  } else {\n    return 'Connect wallet'\n  }\n}\n\nconst walletIcon = (address, supported) => {\n  if (address && supported) {\n    return 'bi-wallet-fill'\n  } else if (address) {\n    return 'bi-exclamation-diamond-fill'\n  } else {\n    return 'bi-plug-fill'\n  }\n}\nconst Wallet = () => {\n  const address   = useSelector(selectAddress)\n  const chainId   = useSelector(selectChainId)\n  const status    = useSelector(selectStatus)\n  const dispatch  = useDispatch()\n  const supported = isNaN(chainId) || supportedChains.includes(chainId)\n  const border    = supported ? 'primary' : 'danger'\n\n  return (\n    <button type=\"button\"\n            className={`btn btn-outline-${border} btn-sm bg-dark text-primary fw-semi-bold order-0 order-lg-1 mt-3 mt-lg-0`}\n            disabled={status === 'loading'}\n            onClick={() => { address ? dispatch(disconnectAsync()) : dispatch(connectAsync()) }}>\n      <span className=\"me-2\">\n        <i className={walletIcon(address, supported)}></i>\n      </span>\n      {addressLabel(address, status)}\n    </button>\n  )\n}\n\nexport default Wallet\n","import PropTypes from 'prop-types'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport Wallet from './wallet'\n\nconst Header = props => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-transparent mt-4\">\n    <div className=\"container\">\n      <Link href=\"/\">\n        <a className=\"navbar-brand me-auto pt-lg-2\">\n          <div className=\"mt-1 pt-1\">\n            <Image src={`/${props.path ?? '.'}/images/logo.svg`} alt=\"2pi Finance\" width=\"149\" height=\"24\" />\n          </div>\n        </a>\n      </Link>\n\n      <button className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#menu\"\n              aria-controls=\"menu\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"menu\">\n        <Wallet />\n\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 mt-lg-2 ms-lg-4 order-1 order-lg-0\">\n          <li className=\"nav-item\">\n            <Link href=\"/referrals\">\n              <a className=\"nav-link\">\n                Referrals\n              </a>\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link href=\"https://docs.2pi.finance/how-to-guide\">\n              <a className=\"nav-link\" target=\"_blank\" rel=\"noreferrer\">\n                How-to guide\n              </a>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n)\n\nHeader.propTypes = {\n  path: PropTypes.string\n}\n\nexport default Header\n","import PropTypes from 'prop-types'\nimport React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { toastDestroyed } from '../features/toastsSlice'\n\nconst Toast = props => {\n  const ref      = React.useRef()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const BSToast = require('bootstrap').Toast\n    const element = ref.current\n    const toast   = new BSToast(element, { autohide: props.autohide })\n\n    toast.show()\n\n    element.addEventListener('hidden.bs.toast', () => {\n      dispatch(toastDestroyed(props.title))\n    })\n  })\n\n  return (\n    <div ref={ref}\n         className={`toast border border-${props.style} border-3 bg-dark`}\n         role=\"alert\"\n         aria-live=\"assertive\"\n         aria-atomic=\"true\">\n      <div className=\"toast-header bg-dark\">\n        <span className={`text-${props.style}`}>\n          <i className={`bi-${props.icon} me-2`}></i>\n        </span>\n        <span className=\"me-auto fw-bold\">{props.title}</span>\n        <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\n      </div>\n\n      <div className=\"toast-body\">\n        {props.body}\n      </div>\n    </div>\n  )\n}\n\nToast.propTypes = {\n  title:    PropTypes.string.isRequired,\n  body:     PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  icon:     PropTypes.string.isRequired,\n  style:    PropTypes.string.isRequired,\n  autohide: PropTypes.bool.isRequired\n}\n\nexport default Toast\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Toast from './toast'\nimport { selectToasts, toastAdded, toastDestroyed } from '../features/toastsSlice'\nimport {\n  selectAddress,\n  selectChainId,\n  supportedChains\n} from '../features/walletSlice'\n\nconst renderToasts = toasts => {\n  return toasts.map((toast, i) => {\n    return <Toast key={`toast-${i}`}\n                  title={toast.title}\n                  body={toast.body}\n                  icon={toast.icon}\n                  style={toast.style}\n                  autohide={!! toast.autohide} />\n  })\n}\n\nconst Toasts = () => {\n  const toasts   = useSelector(selectToasts)\n  const address  = useSelector(selectAddress)\n  const chainId  = useSelector(selectChainId)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (address && ! supportedChains.includes(chainId)) {\n      dispatch(\n        toastAdded({\n          title: 'Wrong network',\n          body:  'Switch to Polygon Mainnet and try again',\n          icon:  'exclamation-triangle',\n          style: 'danger'\n        })\n      )\n    } else {\n      dispatch(toastDestroyed('Wrong network'))\n    }\n  }, [address, chainId, dispatch])\n\n  if (toasts.length) {\n    return (\n      <div aria-live=\"polite\" aria-atomic=\"true\" className=\"position-fixed top-0 start-0 end-0\">\n        <div className=\"toast-container p-3 ms-0 ms-lg-4 mt-5 pt-5\">\n          {renderToasts(toasts)}\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default Toasts\n","import { toWei, fromWei } from './wei'\n\nexport const formatAmount = (amount, prefix, decimals = 2) => {\n  const order = Math.floor(Math.log10(Math.abs(amount)) / 3)\n\n  if (order < 0) {\n    return `${prefix || ''}${amount.toFixed(decimals)}`\n  }\n\n  const units  = ['', 'K', 'M', 'B', 'T', 'Q']\n  const number = (amount / 1000 ** order).toFixed(decimals)\n\n  return `${prefix || ''}${number}${units[order]}`\n}\n\nexport const decimalPlaces = (decimals, max = 8) => {\n  return decimals.comparedTo(max) > 0 ? max : decimals.toNumber()\n}\n\nexport const toUsd = (amountInWei, decimals, usdPrice) => {\n  const amount = amountInWei && fromWei(amountInWei, decimals)\n\n  return amount?.times(usdPrice)\n}\n\nexport const toWeiFormatted = (amount, decimals) => {\n  return toWei(amount, decimals).toFixed(0)\n}\n\nexport const fromWeiFormatted = (amount, decimals) => {\n  return formatAmount(fromWei(amount, decimals))\n}\n\nexport const toPercentage = number => {\n  number      = (number || 0.0) * 100.0\n  const fixed = (number > 0.0 && Math.abs(number) < 10) ? 3 : 2\n\n  return `${formatAmount(number, '', fixed)}%`\n}\n","import {\n  fetchVaultsDataAsync,\n  newVaultFetch,\n  resetVaults\n} from '../features/vaultsSlice'\nimport { defaultChain, supportedChains } from '../features/walletSlice'\n\nconst FETCH_INTERVAL = 30 * 1000\n\nexport const constantVaultFetch = (address, chainId, dispatch) => {\n  const delay     = address ? FETCH_INTERVAL : FETCH_INTERVAL * 6\n  const fetchData = () => {\n    const skip      = chainId !== defaultChain && ! address\n    const supported = supportedChains.includes(chainId)\n\n    if (skip && supported) {\n      return\n    }\n\n    if (supported) {\n      dispatch(newVaultFetch())\n      dispatch(fetchVaultsDataAsync())\n    } else {\n      dispatch(resetVaults())\n    }\n  }\n\n  const interval = setInterval(fetchData, delay)\n\n  fetchData()\n\n  return () => clearInterval(interval)\n}\n","import BigNumber from 'bignumber.js'\n\nexport const fromWei = (amount, decimals) => {\n  return amount.div(new BigNumber(10).pow(decimals))\n}\n\nexport const toWei = (amount, decimals) => {\n  return amount.times(new BigNumber(10).pow(decimals))\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/vaults/[id]\",\n      function () {\n        return require(\"private-next-pages/vaults/[id].js\");\n      }\n    ]);\n  ","module.exports = require('./dist/client/router')\n"],"sourceRoot":""}